{"version":3,"sources":["webpack:///./src/pages/AppTareas/components/Tasks.js","webpack:///./src/pages/AppTareas/App.js","webpack:///./src/pages/AppTareas/components/TaskForm.js"],"names":["Tasks","StyleCompleted","fontSize","color","this","props","done","textDecoration","render","task","map","item","id","Component","App","state","tasks","addTask","title","description","newTask","length","setState","deleteTask","newTasks","filter","checkDone","className","console","log","TaskForm","onSubmit","e","preventDefault","onChange","target","name","value","type","placeholder"],"mappings":"qIAMMA,E,wLAELC,eAAA,WACO,MAAO,CACHC,SAAU,OACVC,MAAOC,KAAKC,MAAMC,KAAO,OAAS,QAClCC,eAAgBH,KAAKC,MAAMC,KAAO,eAAiB,S,EAI3DE,OAAA,WACC,OAAGJ,KAAKC,MAAMI,KAETL,KAAKC,MAAMI,KAAKC,KAAI,SAACC,GAAQ,2CAAiBA,EAAKC,OAKhD,I,GAlBOC,aAsBLb,a,ihBChBTc,E,4JAEJC,MAAO,CACLN,KAAKO,G,EAIPC,QAAU,SAACC,EAAOC,GAChB,IAAMC,EAAU,CACdF,MAAOA,EACPC,YAAaA,EACbP,GAAI,EAAKG,MAAMN,KAAKY,QAGtB,EAAKC,SAAS,CACZb,KAAK,GAAD,SAAM,EAAKM,MAAMN,MAAjB,CAAuBW,O,EAI/BG,WAAa,SAACX,GACZ,IAAMY,EAAW,EAAKT,MAAMN,KAAKgB,QAAO,SAAAhB,GAAI,OAAIA,EAAKG,KAAOA,KAC5D,EAAKU,SAAS,CAACb,KAAMe,K,EAGvBE,UAAY,SAACd,GACX,IAAMY,EAAW,EAAKT,MAAMN,KAAKC,KAAI,SAAAD,GAInC,OAHGA,EAAKG,KAAOA,IACbH,EAAKH,MAAQG,EAAKH,MAEbG,KAET,EAAKa,SAAS,CAACb,KAAMe,K,4GAEvBhB,OAAA,WACA,OACE,6BACE,yBAAKmB,UAAU,YACdC,QAAQC,IAAIzB,KAAKW,MAAMN,MACtB,qDAEF,kBAAC,UAAD,CAAWQ,QAASb,KAAKa,UACzB,kBAAC,UAAD,CAAOR,KAAML,KAAKW,MAAMN,KAAMc,WAAYnB,KAAKmB,WAAYG,UAAWtB,KAAKsB,c,GAzC/Db,aA8CHC,a,+XCtDMgB,E,4JAEjBf,MAAQ,CACJG,MAAM,GACNC,YAAY,I,EAGhBY,SAAW,SAAAC,GACR,EAAK3B,MAAMY,QAAQ,EAAKF,MAAMG,MAAO,EAAKH,MAAMI,aAC/Ca,EAAEC,kB,EAGNC,SAAU,SAAAF,GAAM,IAAD,EACX,EAAKV,WAAL,MACKU,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,MAD9B,K,4GAIJ7B,OAAA,WACI,OACI,yBAAKmB,UAAU,cACX,0BAAMI,SAAU3B,KAAK2B,UACjB,2BAAOO,KAAK,OAAOF,KAAK,QACpBG,YAAY,eACZL,SAAU9B,KAAK8B,SAAUG,MAAOjC,KAAKW,MAAMG,QAC/C,6BACA,8BAAUkB,KAAK,cACXG,YAAY,sBACZL,SAAU9B,KAAK8B,SAAUG,MAAOjC,KAAKW,MAAMI,cAC/C,6BACA,4BAAQmB,KAAK,UAAb,gB,GA7BkBzB","file":"component---src-pages-app-tareas-app-js-43b2e79652829c4d03f6.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/*import Task from './Task';*/\n\n\nclass Tasks extends Component{\n\n\tStyleCompleted() {\n        return {\n            fontSize: '20px',\n            color: this.props.done ? 'gray' : 'black',\n            textDecoration: this.props.done ? 'line-through' : 'none'\n        }\n    }\n\n    render(){\n    \tif(this.props.task){\n\t        return (\n\t        \tthis.props.task.map((item)=>{<div> holaaaaaaa{item.id}</div>})\n\t        );\n    \t}\n\n    \telse{\n    \t\treturn \"\"\n    \t}\n\t}\n}\nexport default Tasks;\n\n\n\n","//jsonplaceholder.typicode.com\n\nimport React, {Component} from 'react';\n\nimport tasks from './samples/task.json';\n\nimport Tasks from './components/Tasks.js';\n\nimport TaskForms from './components/TaskForm.js'\n\nimport './components/style.css';\n\nclass App extends Component{\n\n  state ={\n    task:tasks\n  }\n\n  //Pasar datos desde TaskForm a App.js\n  addTask = (title, description) =>{\n    const newTask = {\n      title: title,\n      description: description,\n      id: this.state.task.length\n    }\n\n    this.setState({\n      task: [...this.state.task, newTask]\n    })\n  }\n\n  deleteTask = (id) => {\n    const newTasks = this.state.task.filter(task => task.id !== id);\n    this.setState({task: newTasks})\n  }\n\n  checkDone = (id) => {\n    const newTasks = this.state.task.map(task => {\n      if(task.id === id){\n        task.done = !task.done\n      }\n      return task;\n    });\n    this.setState({task: newTasks})\n  }\n  render(){\n  return (\n    <div>\n      <div className=\"cabecera\">\n      {console.log(this.state.task)}\n        <h1>Aplicaci&oacute;n de Tareas</h1>\n      </div>\n      <TaskForms addTask={this.addTask}/>\n      <Tasks task={this.state.task} deleteTask={this.deleteTask} checkDone={this.checkDone}/>\n    </div>\n  )\n  }\n}\nexport default App;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nexport default class TaskForm extends Component{\n   \n    state = {\n        title:'',\n        description:''\n    }\n\n    onSubmit = e => {  //Se ejecuta cuando escucha el evento de envÃ­o del formulario\n       this.props.addTask(this.state.title, this.state.description)\n        e.preventDefault();\n    }\n\n    onChange= e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render (){\n        return (\n            <div className=\"formulario\">\n                <form onSubmit={this.onSubmit}>\n                    <input type=\"text\" name=\"title\"\n                        placeholder=\"Write a Task\" \n                        onChange={this.onChange} value={this.state.title}/>\n                    <br/>\n                    <textarea name=\"description\"\n                        placeholder=\"Write a description\"\n                        onChange={this.onChange} value={this.state.description}></textarea>\n                    <br/>\n                    <button type=\"submit\">Save Task</button>\n                </form>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}
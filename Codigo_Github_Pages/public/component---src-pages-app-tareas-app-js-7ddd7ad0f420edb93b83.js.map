{"version":3,"sources":["webpack:///./src/pages/AppTareas/components/Tasks.js","webpack:///./src/pages/AppTareas/App.js","webpack:///./src/pages/AppTareas/components/Task.js","webpack:///./src/pages/AppTareas/components/TaskForm.js"],"names":["Tasks","render","this","props","task","map","key","id","deleteTask","checkDone","Component","App","state","tasks","addTask","title","description","newTask","length","setState","newTasks","filter","done","className","btnDelete","fontSize","background","color","border","padding","borderRadius","cursor","marginLeft","Task","tick","bind","StyleCompleted","textDecoration","style","type","TaskForm","onSubmit","e","preventDefault","onChange","target","name","value","placeholder"],"mappings":"mJAMMA,E,gLACFC,OAAA,WAAS,IAAD,OACJ,OAAOC,KAAKC,MAAMC,KAAKC,KAAI,SAAAD,GAAI,OAAE,kBAAC,UAAD,CAAMA,KAAMA,EAC7CE,IAAKF,EAAKG,GAAIC,WAAY,EAAKL,MAAMK,WACrCC,UAAW,EAAKN,MAAMM,gB,GAJVC,aAWLV,a,ihBCLTW,E,4JAEJC,MAAO,CACLR,KAAKS,G,EAIPC,QAAU,SAACC,EAAOC,GAChB,IAAMC,EAAU,CACdF,MAAOA,EACPC,YAAaA,EACbT,GAAI,EAAKK,MAAMR,KAAKc,QAGtB,EAAKC,SAAS,CACZf,KAAK,GAAD,SAAM,EAAKQ,MAAMR,MAAjB,CAAuBa,O,EAI/BT,WAAa,SAACD,GACZ,IAAMa,EAAW,EAAKR,MAAMR,KAAKiB,QAAO,SAAAjB,GAAI,OAAIA,EAAKG,KAAOA,KAC5D,EAAKY,SAAS,CAACf,KAAMgB,K,EAGvBX,UAAY,SAACF,GACX,IAAMa,EAAW,EAAKR,MAAMR,KAAKC,KAAI,SAAAD,GAInC,OAHGA,EAAKG,KAAOA,IACbH,EAAKkB,MAAQlB,EAAKkB,MAEblB,KAET,EAAKe,SAAS,CAACf,KAAMgB,K,4GAEvBnB,OAAA,WACA,OACE,6BACE,yBAAKsB,UAAU,YACb,qDAEF,kBAAC,UAAD,CAAWT,QAASZ,KAAKY,UACzB,kBAAC,UAAD,CAAOV,KAAMF,KAAKU,MAAMR,KAAMI,WAAYN,KAAKM,WAAYC,UAAWP,KAAKO,c,GAxC/DC,aA6CHC,a,yUCnDf,IAAMa,EAAY,CACdC,SAAU,OACVC,WAAY,UACZC,MAAO,OACPC,OAAQ,OACRC,QAAS,WACTC,aAAc,MACdC,OAAQ,UACRC,WAAY,MAIVC,E,oBAEF,WAAY9B,GAAQ,IAAD,SACf,cAAMA,IAAN,MACS+B,KAAO,EAAKA,KAAKC,K,yHAAV,KAFD,E,kHAKnBC,eAAA,WACI,MAAO,CACHX,SAAU,OACVE,MAAOzB,KAAKC,MAAMmB,KAAO,OAAS,QAClCe,eAAgBnC,KAAKC,MAAMmB,KAAO,eAAiB,S,EAI3DrB,OAAA,WAAS,IAAD,OAEJ,OACI,yBAAKsB,UAAU,WAAWe,MAAOpC,KAAKkC,kBAAtC,iBAAsE,kBAAM,EAAKF,SAAjF,4DAII,2BAAO3B,GAAG,WAAWgC,KAAK,aAC1B,4BAAQD,MAAOd,GAAf,O,GAvBGd,aAgCJuB,a,kIC9CMO,E,4JAEjB5B,MAAQ,CACJG,MAAM,GACNC,YAAY,I,EAGhByB,SAAW,SAAAC,GACR,EAAKvC,MAAMW,QAAQ,EAAKF,MAAMG,MAAO,EAAKH,MAAMI,aAC/C0B,EAAEC,kB,EAGNC,SAAU,SAAAF,GAAM,IAAD,EACX,EAAKvB,WAAL,MACKuB,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,MAD9B,K,4GAIJ9C,OAAA,WACI,OACI,yBAAKsB,UAAU,cACX,0BAAMkB,SAAUvC,KAAKuC,UACjB,2BAAOF,KAAK,OAAOO,KAAK,QACpBE,YAAY,eACZJ,SAAU1C,KAAK0C,SAAUG,MAAO7C,KAAKU,MAAMG,QAC/C,6BACA,8BAAU+B,KAAK,cACXE,YAAY,sBACZJ,SAAU1C,KAAK0C,SAAUG,MAAO7C,KAAKU,MAAMI,cAC/C,6BACA,4BAAQuB,KAAK,UAAb,gB,GA7BkB7B","file":"component---src-pages-app-tareas-app-js-7ddd7ad0f420edb93b83.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from './Task';\n\n\nclass Tasks extends Component{\n    render(){\n        return this.props.task.map(task=><Task task={task} \n        key={task.id} deleteTask={this.props.deleteTask}\n        checkDone={this.props.checkDone}/>);  \n    }\n}\n\nTasks.propTypes ={\n    task: PropTypes.array.isRequired\n}\nexport default Tasks;","//jsonplaceholder.typicode.com\n\nimport React, {Component} from 'react';\n\nimport tasks from './samples/task.json';\n\nimport Tasks from './components/Tasks.js';\n\nimport TaskForms from './components/TaskForm.js'\n\nimport './components/style.css';\n\nclass App extends Component{\n\n  state ={\n    task:tasks\n  }\n\n  //Pasar datos desde TaskForm a App.js\n  addTask = (title, description) =>{\n    const newTask = {\n      title: title,\n      description: description,\n      id: this.state.task.length\n    }\n\n    this.setState({\n      task: [...this.state.task, newTask]\n    })\n  }\n\n  deleteTask = (id) => {\n    const newTasks = this.state.task.filter(task => task.id !== id);\n    this.setState({task: newTasks})\n  }\n\n  checkDone = (id) => {\n    const newTasks = this.state.task.map(task => {\n      if(task.id === id){\n        task.done = !task.done\n      }\n      return task;\n    });\n    this.setState({task: newTasks})\n  }\n  render(){\n  return (\n    <div>\n      <div className=\"cabecera\">\n        <h1>Aplicaci&oacute;n de Tareas</h1>\n      </div>\n      <TaskForms addTask={this.addTask}/>\n      <Tasks task={this.state.task} deleteTask={this.deleteTask} checkDone={this.checkDone}/>\n    </div>\n  )\n  }\n}\nexport default App;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n//import '../App.css'\nimport './style.css';\n\nconst btnDelete = {\n    fontSize: '12px',\n    background: '#ea2027',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    marginLeft: '1%'\n}\n\n\nclass Task extends Component {\n\n    constructor(props) {\n        super(props);\n            this.tick = this.tick.bind(this);\n    }\n\n    StyleCompleted() {\n        return {\n            fontSize: '20px',\n            color: this.props.done ? 'gray' : 'black',\n            textDecoration: this.props.done ? 'line-through' : 'none'\n        }\n    }\n\n    render(){\n\n        return(\n            <div className=\"posicion\" style={this.StyleCompleted()}>     onClick={() => this.tick()}\n                this.props.id -\n                this.props.title - \n                this.props.description\n                <input id=\"checkbox\" type=\"checkbox\" />\n                <button style={btnDelete} >x</button>\n            </div>)\n    }\n}\n\nTask.propTypes={\n    task: PropTypes.object.isRequired\n}\n\nexport default Task;","import React, {Component} from 'react';\n\nimport './style.css';\n\nexport default class TaskForm extends Component{\n   \n    state = {\n        title:'',\n        description:''\n    }\n\n    onSubmit = e => {  //Se ejecuta cuando escucha el evento de envÃ­o del formulario\n       this.props.addTask(this.state.title, this.state.description)\n        e.preventDefault();\n    }\n\n    onChange= e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render (){\n        return (\n            <div className=\"formulario\">\n                <form onSubmit={this.onSubmit}>\n                    <input type=\"text\" name=\"title\"\n                        placeholder=\"Write a Task\" \n                        onChange={this.onChange} value={this.state.title}/>\n                    <br/>\n                    <textarea name=\"description\"\n                        placeholder=\"Write a description\"\n                        onChange={this.onChange} value={this.state.description}></textarea>\n                    <br/>\n                    <button type=\"submit\">Save Task</button>\n                </form>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}
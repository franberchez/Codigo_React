{"version":3,"sources":["webpack:///./src/pages/AppTareas/components/Tasks.js","webpack:///./src/pages/AppTareas/App.js","webpack:///./src/pages/AppTareas/components/TaskForm.js"],"names":["Tasks","StyleCompleted","fontSize","color","this","props","done","textDecoration","render","console","log","task","map","item","style","id","title","description","type","onChange","checkDone","bind","onClick","deleteTask","Component","App","state","tasks","addTask","newTask","length","setState","newTasks","filter","className","TaskForm","onSubmit","e","preventDefault","target","name","value","placeholder"],"mappings":"qIAMMA,E,wLAELC,eAAA,WACO,MAAO,CACHC,SAAU,OACVC,MAAOC,KAAKC,MAAMC,KAAO,OAAS,QAClCC,eAAgBH,KAAKC,MAAMC,KAAO,eAAiB,S,EAI3DE,OAAA,WAAS,IAAD,OAEP,OADCC,QAAQC,IAAIN,KAAKC,MAAMM,MACrBP,KAAKC,MAAMM,KAETP,KAAKC,MAAMM,KAAKC,KAAI,SAACC,GAAD,OAAQ,uBAAGC,MAAOb,kBAAkB,kCAA5B,IAAwCY,EAAKE,GAA7C,KAAkD,sCAAlD,IAAkEF,EAAKG,MACnG,4CAAqBH,EAAKI,YADE,KACY,2BAAOF,GAAG,WAAWG,KAAK,WAAWC,SAAU,EAAKd,MAAMe,UAAUC,KAAKR,EAAKA,EAAKE,MACrH,4BAAQO,QAAS,EAAKjB,MAAMkB,WAAWF,KAAKR,EAAKA,EAAKE,KAAtD,SAKH,I,GArBOS,aAyBLxB,a,ihBCnBTyB,E,4JAEJC,MAAO,CACLf,KAAKgB,G,EAIPC,QAAU,SAACZ,EAAOC,GAChB,IAAMY,EAAU,CACdb,MAAOA,EACPC,YAAaA,EACbF,GAAI,EAAKW,MAAMf,KAAKmB,QAGtB,EAAKC,SAAS,CACZpB,KAAK,GAAD,SAAM,EAAKe,MAAMf,MAAjB,CAAuBkB,O,EAI/BN,WAAa,SAACR,GACZ,IAAMiB,EAAW,EAAKN,MAAMf,KAAKsB,QAAO,SAAAtB,GAAI,OAAIA,EAAKI,KAAOA,KAC5D,EAAKgB,SAAS,CAACpB,KAAMqB,K,EAGvBZ,UAAY,SAACL,GACX,IAAMiB,EAAW,EAAKN,MAAMf,KAAKC,KAAI,SAAAD,GAInC,OAHGA,EAAKI,KAAOA,IACbJ,EAAKL,MAAQK,EAAKL,MAEbK,KAET,EAAKoB,SAAS,CAACpB,KAAMqB,K,4GAEvBxB,OAAA,WACA,OACE,6BACE,yBAAK0B,UAAU,YACb,qDAEF,kBAAC,UAAD,CAAWN,QAASxB,KAAKwB,UACzB,yBAAKM,UAAU,UACb,kDACA,kBAAC,UAAD,CAAOvB,KAAMP,KAAKsB,MAAMf,KAAMY,WAAYnB,KAAKmB,WAAYH,UAAWhB,KAAKgB,e,GA1CjEI,aAgDHC,a,+XCxDMU,E,4JAEjBT,MAAQ,CACJV,MAAM,GACNC,YAAY,I,EAGhBmB,SAAW,SAAAC,GACR,EAAKhC,MAAMuB,QAAQ,EAAKF,MAAMV,MAAO,EAAKU,MAAMT,aAC/CoB,EAAEC,kB,EAGNnB,SAAU,SAAAkB,GAAM,IAAD,EACX,EAAKN,WAAL,MACKM,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAD9B,K,4GAIJjC,OAAA,WACI,OACI,yBAAK0B,UAAU,cACX,0BAAME,SAAUhC,KAAKgC,UACjB,2BAAOlB,KAAK,OAAOsB,KAAK,QACpBE,YAAY,eACZvB,SAAUf,KAAKe,SAAUsB,MAAOrC,KAAKsB,MAAMV,QAC/C,6BACA,8BAAUwB,KAAK,cACXE,YAAY,sBACZvB,SAAUf,KAAKe,SAAUsB,MAAOrC,KAAKsB,MAAMT,cAC/C,6BACA,4BAAQC,KAAK,UAAb,gB,GA7BkBM","file":"component---src-pages-app-tareas-app-js-aa3bb589201cb529b856.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/*import Task from './Task';*/\n\n\nclass Tasks extends Component{\n\n\tStyleCompleted() {\n        return {\n            fontSize: '20px',\n            color: this.props.done ? 'gray' : 'black',\n            textDecoration: this.props.done ? 'line-through' : 'none'\n        }\n    }\n\n    render(){\n    \t{console.log(this.props.task)}\n    \tif(this.props.task){\n\t        return (\n\t        \tthis.props.task.map((item)=><p style={StyleCompleted()}><b>ID:</b> {item.id}  <b>Nombre:</b> {item.title}  \n\t        \t<b>Descripcion: </b>{item.description}  <input id=\"checkbox\" type=\"checkbox\" onChange={this.props.checkDone.bind(item,item.id)}/>\n                <button onClick={this.props.deleteTask.bind(item,item.id)}>x</button></p>)\n\t        );\n    \t}\n\n    \telse{\n    \t\treturn \"\"\n    \t}\n\t}\n}\nexport default Tasks;\n\n\n\n","//jsonplaceholder.typicode.com\n\nimport React, {Component} from 'react';\n\nimport tasks from './samples/task.json';\n\nimport Tasks from './components/Tasks.js';\n\nimport TaskForms from './components/TaskForm.js'\n\nimport './components/style.css';\n\nclass App extends Component{\n\n  state ={\n    task:tasks\n  }\n\n  //Pasar datos desde TaskForm a App.js\n  addTask = (title, description) =>{\n    const newTask = {\n      title: title,\n      description: description,\n      id: this.state.task.length\n    }\n\n    this.setState({\n      task: [...this.state.task, newTask]\n    })\n  }\n\n  deleteTask = (id) => {\n    const newTasks = this.state.task.filter(task => task.id !== id);\n    this.setState({task: newTasks})\n  }\n\n  checkDone = (id) => {\n    const newTasks = this.state.task.map(task => {\n      if(task.id === id){\n        task.done = !task.done\n      }\n      return task;\n    });\n    this.setState({task: newTasks})\n  }\n  render(){\n  return (\n    <div>\n      <div className=\"cabecera\">\n        <h1>Aplicaci&oacute;n de Tareas</h1>\n      </div>\n      <TaskForms addTask={this.addTask}/>\n      <div className=\"tareas\">\n        <h3>Mi lista de tareas</h3>\n        <Tasks task={this.state.task} deleteTask={this.deleteTask} checkDone={this.checkDone}/>\n      </div>\n    </div>\n  )\n  }\n}\nexport default App;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nexport default class TaskForm extends Component{\n   \n    state = {\n        title:'',\n        description:''\n    }\n\n    onSubmit = e => {  //Se ejecuta cuando escucha el evento de envÃ­o del formulario\n       this.props.addTask(this.state.title, this.state.description)\n        e.preventDefault();\n    }\n\n    onChange= e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render (){\n        return (\n            <div className=\"formulario\">\n                <form onSubmit={this.onSubmit}>\n                    <input type=\"text\" name=\"title\"\n                        placeholder=\"Write a Task\" \n                        onChange={this.onChange} value={this.state.title}/>\n                    <br/>\n                    <textarea name=\"description\"\n                        placeholder=\"Write a description\"\n                        onChange={this.onChange} value={this.state.description}></textarea>\n                    <br/>\n                    <button type=\"submit\">Save Task</button>\n                </form>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}